//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.13 at 04:53:20 PM BST 
//


package generated;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Frontal_QNAME = new QName("", "frontal");
    private final static QName _Dimensoes_QNAME = new QName("", "dimensoes");
    private final static QName _Processador_QNAME = new QName("", "processador");
    private final static QName _Tipo_QNAME = new QName("", "tipo");
    private final static QName _Wifi_QNAME = new QName("", "wifi");
    private final static QName _Autonomia_QNAME = new QName("", "autonomia");
    private final static QName _Peso_QNAME = new QName("", "peso");
    private final static QName _Cor_QNAME = new QName("", "cor");
    private final static QName _Redes_QNAME = new QName("", "redes");
    private final static QName _TipoBateria_QNAME = new QName("", "tipo_bateria");
    private final static QName _Url_QNAME = new QName("", "url");
    private final static QName _Preco_QNAME = new QName("", "preco");
    private final static QName _Tamanho_QNAME = new QName("", "tamanho");
    private final static QName _Bluetooth_QNAME = new QName("", "bluetooth");
    private final static QName _Traseira_QNAME = new QName("", "traseira");
    private final static QName _So_QNAME = new QName("", "so");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Ecra }
     * 
     */
    public Ecra createEcra() {
        return new Ecra();
    }

    /**
     * Create an instance of {@link Smartphone }
     * 
     */
    public Smartphone createSmartphone() {
        return new Smartphone();
    }

    /**
     * Create an instance of {@link Comunicacao }
     * 
     */
    public Comunicacao createComunicacao() {
        return new Comunicacao();
    }

    /**
     * Create an instance of {@link Camara }
     * 
     */
    public Camara createCamara() {
        return new Camara();
    }

    /**
     * Create an instance of {@link Smartphones }
     * 
     */
    public Smartphones createSmartphones() {
        return new Smartphones();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "frontal")
    public JAXBElement<String> createFrontal(String value) {
        return new JAXBElement<String>(_Frontal_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "dimensoes")
    public JAXBElement<String> createDimensoes(String value) {
        return new JAXBElement<String>(_Dimensoes_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "processador")
    public JAXBElement<String> createProcessador(String value) {
        return new JAXBElement<String>(_Processador_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "tipo")
    public JAXBElement<String> createTipo(String value) {
        return new JAXBElement<String>(_Tipo_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "wifi")
    public JAXBElement<String> createWifi(String value) {
        return new JAXBElement<String>(_Wifi_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "autonomia")
    public JAXBElement<String> createAutonomia(String value) {
        return new JAXBElement<String>(_Autonomia_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "peso")
    public JAXBElement<String> createPeso(String value) {
        return new JAXBElement<String>(_Peso_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "cor")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createCor(String value) {
        return new JAXBElement<String>(_Cor_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "redes")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createRedes(String value) {
        return new JAXBElement<String>(_Redes_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "tipo_bateria")
    public JAXBElement<String> createTipoBateria(String value) {
        return new JAXBElement<String>(_TipoBateria_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "url")
    public JAXBElement<String> createUrl(String value) {
        return new JAXBElement<String>(_Url_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "preco")
    public JAXBElement<String> createPreco(String value) {
        return new JAXBElement<String>(_Preco_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "tamanho")
    public JAXBElement<String> createTamanho(String value) {
        return new JAXBElement<String>(_Tamanho_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "bluetooth")
    public JAXBElement<String> createBluetooth(String value) {
        return new JAXBElement<String>(_Bluetooth_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "traseira")
    public JAXBElement<String> createTraseira(String value) {
        return new JAXBElement<String>(_Traseira_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "so")
    public JAXBElement<String> createSo(String value) {
        return new JAXBElement<String>(_So_QNAME, String.class, null, value);
    }

}
